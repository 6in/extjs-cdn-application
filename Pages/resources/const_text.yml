key: |
  テキストをここに記述

TreeMaker:
  inputText: |
    アジェンダ
    1 サイトマップとは？
    2 サイトマップの種類と違い
    3 HTMLサイトマップ
      3.1 HTMLサイトマップの作り方
        3.1.1 手動で作成する方法
        3.1.2 WordPressのプラグインで作成する方法
    4 XMLサイトマップ
      4.1 XMLサイトマップの作り方
        4.1.1 sitemap.xml Editorを使ってXMLサイトマップを作成する方法
        4.1.2 WordPressのプラグインで作成する方法
    5 XMLサイトマップをGoogleに伝える方法
      5.1 Google Search Consoleを活用する方法
      5.2 robots.txtを用いる方法
CaseFormatMaker:
  inputText: |
    SNAKE_CASE_1  # コメント1
    snake_case_2  // コメント2
      CamelCase3 -- コメント3
      camelCase4,  # カンマ、スペースは除去
        TRAIN-CASE-5
        train-case-6
          UPPERCASE7,
          lowercase8
    "Abc_Def"  # " は除去
    'ghi_Jkl'  # ' は除去
    MNO-PQR
    Stu
    VWXYZ
    CCamelCase
    cCamelCCase
GenericTemplate:
  txtSimple: "Simple,{LINE_NO},{COL_1},{COL_2},{COL_3},{COL_4}"
  txtUnderscore: |
    ### Underscoreのテンプレートを記述します
    ### rowsには行データ、colsにはカラム名が格納されています
    ### セル内Jsonを変換にチェックを入れると、row.COL_5[0].LAST_NAMEが適用されます
    <% _.each( rows,function(row,i) { %> \
    Underscore,<%=row.LINE_NO%>,<%=row.COL_1%>,<%=row.COL_2%>,<%=row.COL_3%>,<%=row.COL_4%>
    <% }) %> \
  txtJavaScript: |
    // Javascriptにて加工処理を実装します
    // rowsには行データ、colsにはカラム名が格納されています
    result = []
    rows.forEach( (row,i) => {
      result.push(`JavaScript,${row.LINE_NO},${row.COL_1},${row.COL_2},${row.COL_3},${row.COL_4}`)
    })
  readme: |
    概要　  
    ========================

    * 左のシートのデータに対して、テンプレートを適用し、テキストを生成します。
    
    Simple
    ------------------------
    
    * シンプルなテンプレートです。
    * `{カラム名}` でフィールドの埋め込みができます。
    
    Underscore
    ------------------------
    
    * Underscore.jsのテンプレートを利用して、テキスト生成します。
    
    JavaScript
    ------------------------
    
      * JavaScriptを記述して、テキストを生成します。
  
ReplaceText:
  inputText: |
    // 変換処理を記述してください
    function convert(text) {
      // debugger
      text = text.replace(/テキスト/g,"文字列")
      text = text.replace(/貼り付け/g,"ペーストし")
      return text
    }
  original: |
    ここに変換前のテキストを貼り付けてください。
    ここに変換前のテキストを貼り付けてください。
    ここに変換前のテキストを貼り付けてください。
  modified: ''
  iframeScript: |
    console.log("script installed")
    function convert() {
      
    }

    function removeScript() {
      const oldScript = document.querySelector("#script-runtime")
      if (oldScript) {
        console.log('remove old script')
        oldScript.parentNode.removeChild(oldScript)
      }
      convert = null
    }

    function addScript(scriptText) {
      const script = document.createElement("script")
      script.id = "script-runtime"
      script.type = "text/javascript";
      script.innerHTML = scriptText
      document.body.appendChild(script)
    }

    window.addEventListener('message', event => {
      const mainWindow = event.source;
      let result = "";
      try {
        // 以前のScriptタグの消去
        removeScript()

        // Scriptタグを追加
        addScript(event.data.script)

        // 変換実行
        if (convert) {
          result =  convert(event.data.text)
        }

        // 結果を送信
        mainWindow.postMessage(result, event.origin);
      } catch (err) {
        // 結果を送信
        mainWindow.postMessage(err.message, event.origin);
      }
    });
KataKanaConvert:
  inputText: |
    ABCDEFG
    abcdefg
    ＡＢＣＤＥＦＧ
    ａｂｃｄｅｆｇ
    あいうえお
    カキクケコ
TinySql:
  readme: |
    - sqliteのJS実装であるsql.jsを利用して、シートからテーブルを生成しSELECTを発行した結果を表示できます。
    - テーブル名は１列目、続く行にカラム一覧、さらにデータ行を記述してください。
    - カラム名にサフィックスをつけると、データ型を指定できます。
      - :i 数値型
      - :r 浮動小数点数
      - :b BLOB型
      - なし 文字列型 
    - データ行はカラム名と同じ列数で記述してください。
    - テーブルとテーブルの間には空行を１行以上開けてください。
    - SQLを編集し、実行ボタンをクリックするとSQLが実行されます。
    - SELECT文は、;区切りで複数記述でき、それぞれのSQL毎に出力結果が表示されます。
    - 表の上で右クリックをすると、行・列の増減ができます。
  txtSql: |
    select CURRENT_TIMESTAMP as dt
    union all
    select date(CURRENT_TIMESTAMP) as dt
    union all
    SELECT strftime('%Y年%m月%d日', 'now') as dt
    ;
    select 
      ta.col1 + tb.col1 as col1
    , ta.col2 + tb.col2 as col2
    , ta.col3
    , tb.col4
    from tablea ta
    inner join tableb tb
    on
      ta.col1 = tb.col1
    order by 
      ta.col1
    ;


  rows:
    - 
      - tablea
      - ''
      - ''
      - ''
    - 
      - col1:i
      - col2:r
      - col3
    - 
      - '1'
      - '2.5'
      - '3'
    - 
      - '4'
      - '5.5'
      - '6'
    - 
      - ''
      - ''
      - ''
    - 
      - tableb
      - ''
      - ''
    - 
      - col1:i
      - col2:r
      - col3
      - col4
    - 
      - '1'
      - '2.5'
      - '3'
      - 'ABC'
    - 
      - '4'
      - '5.5'
      - '6'  
      - 'DEF'
    - 
      - ''
      - ''
      - ''
    - 
      - ''
      - ''
      - ''      